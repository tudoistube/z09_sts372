<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jone</groupId>
	<artifactId>web</artifactId>
	<name>z09_sts372</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
	<!--		 
		<java-version>1.6</java-version>
		<org.springframework-version>3.1.1.RELEASE</org.springframework-version>
	-->
		<java-version>1.7</java-version>
		<org.springframework-version>4.1.9.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
	
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		
		<!-- mySql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.36</version>
		</dependency>
				
		<!-- Servlet -->
		<!-- 과제22-4.A.WAS없이 컨트롤러 테스트하기..
		변경전 :
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>		
			스프링3.2부터는 jUnit만을 사용해서 컨트롤러를 테스트할 수 있는데,
			spring-test모듈을 사용할 때 가능하면 WAS의 Servlet스펙 버전을 일치시켜서 테스트할 것.
			테스트코드작성은 test폴더를 이용해서 작업하고, WAS를 실행하지 않고 컨트롤러를
			테스트하려면 pom.xml의 servlet버전을 높여줘야만 가능함.
		변경후 :
		 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- 
			Test
			jUnit버전은 4.11 이상. 
		-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		
		<!-- 과제22-2.A.NameSpace 추가.
			mybatis
			http://mvnrepository.com/artifact/org.mybatis/mybatis/3.2.8 
			Spring과 MyBatis 사이에 두 프레임워크의 접착제 역할을 하는 모듈 추가.
			mybatis, mybatis-spring, spring-jdbc, spring-test.
			이후 root-context.xml에서 다양한 태그 사용가능함.
		-->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.2.8</version>
		</dependency>
		
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.3</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<!-- <version>4.1.9.RELEASE</version>  -->
			<version>${org.springframework-version}</version>
		</dependency>		
				
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>	
		
		<!-- 과제22-3.F. JSON데이터를 생성하는 샘플. 
			JSON, Jackson-databind 라이브러리를 검색했고,
			적절한 객체를 반환하고, @ResponseBdy 어노테이션을 추가함. 
		-->		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.5.5</version>
		</dependency>

		<!-- 과제22-5.I. MyBatis의 로그 log4jdbc-log4j2 설정.
			잘못된 SQL 또는 잘못된 속성이름으로 인한 예외발생시 자세한 로그 제공.
			Log4jdbc Log4j2 Jdbc4 » 1.16
			1. pom.xml 설정후 /zex00/src/main/webapp/WEB-INF/spring/root-context.xml에
			   datasource 설정변경.
			2. /zex00/src/test/resources/log4jdbc.log4j2.properties 파일 추가.
			3. /zex00/src/test/resources/logback.xml 파일 추가.
		 -->					
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4</artifactId>
			<version>1.16</version>
		</dependency>		

		<!--과제23-1.B. Spring Maven에 Oracle 연결하기.
		//...Oracle 11g : https://mvnrepository.com/artifact/com.oracle/ojdbc14
		//...오라클과 메이븐의 라이선스 문제로 오류가 남.		
		-->
		<dependency>
		    <groupId>com.oracle</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.1.0.7.0</version>
		</dependency>		  
		
		<!--과제24_2.L.5. AbstractExcelView 클래스를 주입함.
		//…poi-3.9.jar가 생김.
		//...http://blog.naver.com/nosleep/120200419856
		//...http://mvnrepository.com/artifact/org.apache.poi/poi/3.9 
		-->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>3.9</version>
		</dependency>

		        
	</dependencies>

	<!--과제23-1.B. Spring Maven에 Oracle 연결하기. -->
	<repositories>
	    <repository>
	        <id>oracle</id>
	        <name>used for Connecting Oracle 11g Library</name>
	        <url>http://maven.jahia.org/maven2</url>
	    </repository>
	</repositories>
	
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
